-------------------------------------------------------------------------------------------------------------------------
Final procedure in calculating ca results - TG/2023/1726
-------------------------------------------------------------------------------------------------------------------------


DELIMITER //

CREATE PROCEDURE calculate_ca_marks_by_student(
    IN p_reg_no VARCHAR(8),
    IN p_c_code VARCHAR(8)
)
BEGIN
    DECLARE q1 DECIMAL(5,2) DEFAULT 0;
    DECLARE q2 DECIMAL(5,2) DEFAULT 0;
    DECLARE q3 DECIMAL(5,2) DEFAULT 0;
    DECLARE mid_theory DECIMAL(5,2) DEFAULT 0;
    DECLARE mid_practical DECIMAL(5,2) DEFAULT 0;
    DECLARE mid_total DECIMAL(5,2) DEFAULT 0;
    DECLARE assess DECIMAL(5,2) DEFAULT 0;
    DECLARE best_quiz_sum DECIMAL(5,2);
    DECLARE ca_total DECIMAL(5,2);
    DECLARE grade VARCHAR(10);

    -- Get quiz, mid (theory & practical), and assessment marks
    SELECT 
        IFNULL(q1.Q1,0),
        IFNULL(q2.Q2,0),
        IFNULL(q3.Q3,0),
        IFNULL(m.theory,0),
        IFNULL(m.practical,0),
        IFNULL(a.Assesment_marks,0)
    INTO q1, q2, q3, mid_theory, mid_practical, assess
    FROM q1_marks q1
    LEFT JOIN q2_marks q2 ON q1.reg_no = q2.reg_no AND q1.c_code = q2.c_code
    LEFT JOIN q3_marks q3 ON q1.reg_no = q3.reg_no AND q1.c_code = q3.c_code
    LEFT JOIN mid_masks m ON q1.reg_no = m.reg_no AND q1.c_code = m.c_code
    LEFT JOIN assesment_marks a ON q1.reg_no = a.reg_no AND q1.c_code = a.c_code
    WHERE q1.reg_no = p_reg_no AND q1.c_code = p_c_code;

    -- Calculate mid_total based on presence of theory and practical
    IF mid_theory > 0 AND mid_practical > 0 THEN
        SET mid_total = (mid_theory + mid_practical) / 2;
    ELSE
        SET mid_total = mid_theory + mid_practical;
    END IF;

    -- Calculate best 2 quiz sum
    SET best_quiz_sum = q1 + q2 + q3 - LEAST(q1, q2, q3);

    -- Calculate total CA marks
    SET ca_total = best_quiz_sum + mid_total + assess;

    -- Determine grade
    IF ca_total >= 160 THEN
        SET grade = 'CA Pass';
    ELSE
        SET grade = 'CA Fail';
    END IF;

    -- Output
    SELECT p_reg_no AS Student_ID,
           p_c_code AS Course_Code,
           best_quiz_sum AS Best_2_Quizzes,
           mid_total AS Mid_Marks,
           assess AS Assessment,
           ca_total AS CA_Total,
           grade AS CA_Grade;
END //

DELIMITER ;





CALL calculate_ca_marks_by_student('TCH/1012' , 'TMS1233') ;





-------------------------------------------------------------------------------------------------------------------------
Final procedure in Displaying marks by student - TG/2023/1726
-------------------------------------------------------------------------------------------------------------------------


-- Change delimiter to //
DELIMITER //

-- Create procedure
CREATE PROCEDURE display_student_marks(
    IN p_reg_no VARCHAR(8),
    IN p_c_code VARCHAR(8)
)
BEGIN
    SELECT 
        tq.reg_no,
        tq.c_code,
        q1.Q1,
        q2.Q2,
        q3.Q3,
        am.Assesment_marks AS Assessment,
        mm.theory AS Mid_Theory,
        mm.practical AS Mid_Practical,
        em.theory AS End_Theory,
        em.practical AS End_Practical
    FROM top2_quiz_view tq
    LEFT JOIN q1_marks q1
        ON tq.reg_no = q1.reg_no AND tq.c_code = q1.c_code
    LEFT JOIN q2_marks q2
        ON tq.reg_no = q2.reg_no AND tq.c_code = q2.c_code
    LEFT JOIN q3_marks q3
        ON tq.reg_no = q3.reg_no AND tq.c_code = q3.c_code
    LEFT JOIN assesment_marks am
        ON tq.reg_no = am.reg_no AND tq.c_code = am.c_code
    LEFT JOIN mid_masks mm
        ON tq.reg_no = mm.reg_no AND tq.c_code = mm.c_code
    LEFT JOIN end_marks em
        ON tq.reg_no = em.reg_no AND tq.c_code = em.c_code
    WHERE tq.reg_no = p_reg_no
      AND tq.c_code = p_c_code;
END //

-- Restore delimiter back to default
DELIMITER ;





CALL display_student_marks('TCH/1001', 'ICT1233');




